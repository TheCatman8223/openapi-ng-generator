
{{>header}}
import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';
import { catchError } from 'rxjs/operators';
import { HttpEvent, HttpHandler, HttpRequest, HttpInterceptor } from '@angular/common/http';
@Injectable()
export class OpenApiInterceptor implements HttpInterceptor {
  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
    const accessToken = localStorage.getItem('accessToken');
    if (accessToken) {
      const authReq = req.clone({
        headers: req.headers.set('Authorization', `Bearer ${accessToken}`)
      });
      return next.handle(authReq).pipe(
      catchError(error => {
        if (error.status === 401) {
          console.error('Unauthorized request');
        } else if (error.status === 500) {
          console.error('Server error - Please try again later');
        }
          return of(error)
        })
      );
    }
    return next.handle(req).pipe(
      catchError(error => {
        if (error.status === 401) {
          console.error('Unauthorized request');
        } else if (error.status === 500) {
          console.error('Server error');
        }
          return of(error)
        })
      );
    }
}